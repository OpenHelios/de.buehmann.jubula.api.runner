plugins {
	id 'com.jfrog.bintray' version '1.5'
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

group = 'de.buehmann.tools'
version = '4.0.0'

repositories {
	jcenter()
	maven {
		url 'https://repo.eclipse.org/content/repositories/jubula-snapshots/'
	}
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.13'

	// external Jubula libraries
	compile 'commons-lang:commons-lang:2.6'
	compile 'com.thoughtworks.xstream:xstream:1.4.8'
	compile 'org.apache.directory.studio:org.apache.commons.codec:1.8'

	// Jubula Java API
	compile 'org.eclipse.jubula:org.eclipse.jubula.client.api:3.2.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.client.api.commands:4.0.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.communication:4.0.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.tools:4.0.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.toolkit.api:4.0.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.toolkit.base.api:4.0.0-SNAPSHOT'
	compile 'org.eclipse.jubula:org.eclipse.jubula.toolkit.concrete.api:4.0.0-SNAPSHOT'

	testCompile 'junit:junit:4.12'
}

publishing {
	publications {
		MyPublication(MavenPublication) {
			from components.java
			groupId project.group
			artifactId project.name
			version project.version
		}
	}
}

bintray {
	user = project['bintray.user']
	key = project['bintray.key']
	publications = ['MyPublication']
	// activate real run with false
	dryRun = true
	publish = true // automatically publish version after upload
	pkg {
		repo = 'maven'
		name = project.name
		userOrg = 'Raimar Bühmann'
		licenses = ['EPL-1.0']
		vcsUrl = 'https://github.com/OpenHelios/de.buehmann.jubula.api.runner.git'
		labels = ['jubula', 'java', 'api', 'runner']
		publicDownloadNumbers = true
	}
/*
	version {
		name = project.version
		desc = 'Jubula API runner ' + project.version
		released  = new Date()
		vcsTag = project.version
		// attributes = ['library': 'de.buehmann.tools:de.buehmann.jubula.api.runnner']
	}
*/
}
